<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Build and deploy the Angular.js express-seed app</description>
  <logRotator>
    <daysToKeep>60</daysToKeep>
    <numToKeep>-1</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>20</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <nectar.plugins.rbac.groups.JobProxyGroupContainer>
      <groups/>
    </nectar.plugins.rbac.groups.JobProxyGroupContainer>
    <com.cloudbees.jenkins.plugins.PublicKey/>
    <com.cloudbees.plugins.deployer.DeployNowJobProperty>
      <oneClickDeploy>false</oneClickDeploy>
      <configuration>
        <user>(jenkins)</user>
        <account>${account}</account>
        <deployables/>
      </configuration>
    </com.cloudbees.plugins.deployer.DeployNowJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name></name>
        <refspec></refspec>
        <url>${repositoryUrl}</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>**</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>false</clean>
    <wipeOutWorkspace>false</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <useShallowClone>false</useShallowClone>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir></relativeTargetDir>
    <reference></reference>
    <excludedRegions></excludedRegions>
    <excludedUsers></excludedUsers>
    <gitConfigName></gitConfigName>
    <gitConfigEmail></gitConfigEmail>
    <skipTag>false</skipTag>
    <includedRegions></includedRegions>
    <scmName></scmName>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(Default)</jdk>
  <triggers class="vector">
    <com.cloudbees.jenkins.forge.ForgePushTrigger>
      <spec></spec>
    </com.cloudbees.jenkins.forge.ForgePushTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
export DISPLAY=:1
Xvfb :1 &amp;

node_version=v0.10.2
install_name=node-$node_version-linux-x64
node_home=$PWD/$install_name

if [ ! -e $install_name.tar.gz ]
then
    wget http://nodejs.org/dist/$node_version/$install_name.tar.gz
    tar xf $install_name.tar.gz
fi

#
# package the app for the CloudBees node.js stack (deployer picks it up)
# 

cat > "main.js" &lt;&lt; EOF
  var express = require('express'),
  routes = require('./routes'),
  api = require('./routes/api');

  var app = module.exports = express();

  // Configuration

  app.configure(function(){
    app.set('views', __dirname + '/views');
    app.set('view engine', 'jade');
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    app.use(express.static(__dirname + '/public'));
    app.use(app.router);
  });

  app.configure('development', function(){
    app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));
  });

  app.configure('production', function(){
    app.use(express.errorHandler());
  });

  // Routes

  app.get('/', routes.index);
  app.get('/partials/:name', routes.partials);

  // JSON API

  app.get('/api/name', api.name);

  // redirect all others to the index (HTML5 history)
  app.get('*', routes.index);

  // Start server

  app.listen(process.env.PORT, function(){
    console.log("Express server listening on port %d in %s mode", this.address().port, app.settings.env);
  });
EOF

$node_home/bin/npm install

mkdir -p target
rm -rf target/app.zip
zip -r target/app.zip *

</command>
    </hudson.tasks.Shell>
    <com.cloudbees.plugins.deployer.DeployBuilder>
      <configuration>
        <user>(jenkins)</user>
        <account>${account}</account>
        <deployables>
          <com.cloudbees.plugins.deployer.deployables.WildcardMatchingDeployable>
            <applicationId>${applicationName}</applicationId>
            <applicationEnvironment></applicationEnvironment>
            <applicationConfig/>
            <apiEndPoint>https://api.cloudbees.com/api</apiEndPoint>
            <filePattern>target/*.zip</filePattern>
          </com.cloudbees.plugins.deployer.deployables.WildcardMatchingDeployable>
        </deployables>
      </configuration>
    </com.cloudbees.plugins.deployer.DeployBuilder>
  </builders>
  <publishers>
  </publishers>
  <buildWrappers/>
</project>
